name: build stellarite iso
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/build_iso.yml"

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-iso:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
    env:
      FEDORA_MAJOR_VERSION: 42
      IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
      IMAGE_NAME: ${{ github.event.repository.name }}

    steps:
      # Unified environment variables declaration to make things neat.
      - name: Define extra environment variables
        run: |
          echo "CONTAINER_TARGET=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "SHA_HEAD_SHORT=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "KERNEL_FLAVOR=${KERNEL_FLAVOR}" >> $GITHUB_ENV
          echo "FEDORA_VERSION=${FEDORA_MAJOR_VERSION}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${FEDORA_MAJOR_VERSION}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      - name: Get Flatpak dependencies
        id: flatpak-dependencies
        env:
          IMAGE_FULL: ${{ steps.registry_case.outputs.lowercase }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        shell: bash
        run: |
          set -euox pipefail

          IMAGE="${IMAGE_FULL}"

          # Create temporary directory
          TEMP_FLATPAK_INSTALL_DIR=$(mktemp -d -p /tmp flatpak-XXXXXX)
          FLATPAK_REFS_DIR=./flatpak-refs
          FLATPAK_REFS_DIR_ABS=$(realpath "${FLATPAK_REFS_DIR}")
          mkdir -p "${FLATPAK_REFS_DIR}"
          mv flatpaks "${FLATPAK_REFS_DIR_ABS}/flatpaks"

          # Read the list of Flatpak packages from the manifest
          FLATPAK_REFS=()
          while IFS= read -r line; do
            FLATPAK_REFS+=("$line")
          done < "${FLATPAK_REFS_DIR}/flatpaks"

          echo "Flatpak refs: ${FLATPAK_REFS[@]}"

          # Generate installation script
          cat <<EOF > "${TEMP_FLATPAK_INSTALL_DIR}/install-flatpaks.sh"
          mkdir -p /flatpak/flatpak /flatpak/triggers
          mkdir /var/tmp
          chmod -R 1777 /var/tmp
          flatpak config --system --set languages "*"
          flatpak remote-add --system flathub https://flathub.org/repo/flathub.flatpakrepo
          flatpak install --system -y flathub ${FLATPAK_REFS[@]}
          ostree refs --repo=\${FLATPAK_SYSTEM_DIR}/repo | grep '^deploy/' | grep -v 'org\.freedesktop\.Platform\.openh264' | sed 's/^deploy\///g' > /output/flatpaks-with-deps
          EOF
          docker run --rm --privileged \
            --entrypoint /bin/bash \
            -e FLATPAK_SYSTEM_DIR=/flatpak/flatpak \
            -e FLATPAK_TRIGGERS_DIR=/flatpak/triggers \
            -v ${FLATPAK_REFS_DIR_ABS}:/output \
            -v ${TEMP_FLATPAK_INSTALL_DIR}:/temp_flatpak_install_dir \
            ${IMAGE} /temp_flatpak_install_dir/install-flatpaks.sh
          docker rmi ${IMAGE}
          cat ${FLATPAK_REFS_DIR}/flatpaks-with-deps

          echo "FLATPAK_REFS_DIR=${FLATPAK_REFS_DIR}" >> $GITHUB_OUTPUT

      - name: Build ISOs
        uses: jasonn3/build-container-installer@v1.3.0
        id: build
        with:
          iso_name: ${{ env.IMAGE_NAME }}-${{ env.FEDORA_VERSION }}.iso
          arch: x86_64
          image_name: ${{ env.IMAGE_NAME }}
          image_repo: ${{ steps.registry_case.outputs.lowercase }}
          # We cannot use Silverblue variant since we need the user creation options in anaconda
          variant: "Cosmic"
          version: ${{ env.FEDORA_VERSION }}
          image_tag: ${{ env.IMAGE_TAG }}
          secure_boot_key_url: "https://github.com/ublue-os/akmods/raw/main/certs/public_key.der"
          enrollment_password: "universalblue"
          flatpak_remote_refs_dir: ${{ steps.flatpak-dependencies.outputs.FLATPAK_REFS_DIR }}
          enable_flatpak_dependencies: false

      - name: Upload ISOs and Checksum to Job Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}-${{ env.IMAGE_TAG }}
          path: |
            ${{ steps.build.outputs.iso_path }}
            ${{ steps.build.outputs.iso_path }}-CHECKSUM
          if-no-files-found: error
          retention-days: 0
          compression-level: 3
          overwrite: true
